% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardize_date.R
\name{standardize_date}
\alias{standardize_date}
\title{Standardize date variables}
\usage{
standardize_date(
  data,
  date_column_name = NULL,
  format = NULL,
  timeframe = NULL,
  check_timeframe = FALSE,
  report = list(),
  error_tolerance = 0.5
)
}
\arguments{
\item{data}{the input data frame}

\item{date_column_name}{the name of the date column of interest.
default: 'Date', or 'DATE', or 'date'}

\item{format}{the format of the date values in the date column}

\item{timeframe}{the expected first and last date. See the \code{clean_data()}
helper for more details}

\item{check_timeframe}{a logical to check whether dates fall within timeframe}

\item{report}{the object that will contains details about the result from the
date columns standardization}

\item{error_tolerance}{a number between 0 and 1 indicating the proportion of
entries which cannot be identified as dates to be tolerated. See the
\code{clean_data()} helper for more details}
}
\value{
a \code{list} of 2 elements: the input dataset where the date columns
have been standardized and a report object of type \code{list} that contains
the details about the columns that have been modified.
}
\description{
Standardize date variables
}
\examples{
dat <- standardize_date(
data = readRDS(system.file("extdata", "test_df.RDS", package = "cleanepi")),
date_column_name = "date_first_pcr_positive_test",
format = NULL,
timeframe = NULL,
check_timeframe = FALSE,
report = list(),
error_tolerance = 0.5
)
}
