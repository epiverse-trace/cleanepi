% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcualte_age.R
\name{calculate_age}
\alias{calculate_age}
\title{Calculate age from a specified date column}
\usage{
calculate_age(
  data,
  target_column = NULL,
  end_date = Sys.Date(),
  age_in = "years",
  na_strings = common_na_strings,
  age_column_name = sprintf("age_\%s", age_in),
  age_remainder_unit = c("days", "weeks", "months")
)
}
\arguments{
\item{data}{A data frame with at least one date column.}

\item{target_column}{A string specifying the name of the date column of
interest.}

\item{end_date}{An end date, the default is today's date.}

\item{age_in}{A string that specifies whether to return the age in 'years',
'months', 'weeks' or 'days'. The default is in 'years'.}

\item{na_strings}{A string that represents the missing values in the
date column of interest. This is only needed when the date column
contains missing values.}

\item{age_column_name}{A string for the name of the age column added to
\code{data}.}

\item{age_remainder_unit}{A string for the unit in which the remainder of the
age should be calculated. May be one of "months", "weeks", and "days".
Remainders requested in the same unit as the age will return values of 0.}
}
\value{
The input data frame with 2 additional columns:
\enumerate{
\item "age_in_years",  "age_in_months",  "age_in_weeks", or
"age_in_days" depending on the value of the 'age_in' parameter.
\item "remainder_days": A column with the number of remaining days after
the age is calculated in years, weeks or months.
}
}
\description{
Calculate age from a specified date column
}
\examples{
age <- calculate_age(
  data = readRDS(system.file("extdata", "test_df.RDS",
    package = "cleanepi"
  )),
  target_column = "dateOfBirth",
  end_date = Sys.Date(),
  age_in = "months",
  age_remainder_unit = "days",
  na_strings = "-99"
)
}
