% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcualte_age.R
\name{calculate_age}
\alias{calculate_age}
\title{Calculate age from a specified date column}
\usage{
calculate_age(
  data,
  target_column = NULL,
  end_date = Sys.Date(),
  age_in = "years",
  na_strings = cleanepi::common_na_strings
)
}
\arguments{
\item{data}{A data frame with at least one date column.}

\item{target_column}{A string specifying the name of the date column of
interest.}

\item{end_date}{An end date, the default is today's date.}

\item{age_in}{A string that specifies whether to return the age in 'years',
'months', 'weeks' or 'days'. The default is in 'years'.}

\item{na_strings}{A string that represents the missing values in the
date column of interest. This is only needed when the date column
contains missing values.}
}
\value{
The input data frame with 2 additional columns:
\enumerate{
\item "age_in_years",  "age_in_months",  "age_in_weeks", or
"age_in_days" depending on the value of the 'age_in' parameter.
\item "remainder_days": A column with the number of remaining days after
the age is calculated in years, weeks or months.
}
}
\description{
Calculate age from a specified date column
}
\examples{
age <- calculate_age(
  data          = readRDS(system.file("extdata", "test_df.RDS",
                                      package = "cleanepi")),
  target_column = "dateOfBirth",
  end_date      = Sys.Date(),
  age_in        = "months",
  na_strings    = "-99"
)
}
