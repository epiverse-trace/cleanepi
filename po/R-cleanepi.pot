msgid ""
msgstr ""
"Project-Id-Version: cleanepi 1.1.0.9000\n"
"POT-Creation-Date: 2025-07-15 14:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: check_date_sequence.R:64
msgid ""
"Found the following unrecognised column name{?s}: {.field "
"{target_columns[missing_cols]}}."
msgstr ""

#: check_date_sequence.R:72
msgid "Insufficient number of columns to compare."
msgstr ""

#: check_date_sequence.R:73
msgid ""
"At least two columns of type {.cls Date} are required for this operation."
msgstr ""

#: check_date_sequence.R:74
msgid "Have you provided an invalid column name?"
msgstr ""

#: check_date_sequence.R:90
msgid ""
"Impossible to check the sequence of the date events due to missing values."
msgstr ""

#: check_date_sequence.R:99
msgid ""
"Cannot check the sequence of date events across {.val {sum(is."
"na(order_date))}} rows due to missing data."
msgstr ""

#: check_date_sequence.R:109
msgid "No incorrect date sequence was detected."
msgstr ""

#: check_date_sequence.R:126
msgid ""
"Detected {.val {length(bad_order)}} incorrect date sequence{?s} at line{?s}: "
"{.val {toString(bad_order)}}."
msgstr ""

#: check_date_sequence.R:127
msgid ""
"Enter {.code print_report(data = dat, \"incorrect_date_sequence\")} to "
"access them, where {.val dat} is the object used to store the output from "
"this operation."
msgstr ""

#: clean_data.R:142
msgid "Cleaning column names"
msgstr ""

#: clean_data.R:159
msgid "Replacing missing values with NA"
msgstr ""

#: clean_data.R:173
msgid "Removing constant columns and empty rows"
msgstr ""

#: clean_data.R:190
msgid "Removing duplicated rows"
msgstr ""

#: clean_data.R:205
msgid "Standardizing Date columns"
msgstr ""

#: clean_data.R:226
msgid "Checking subject IDs format"
msgstr ""

#: clean_data.R:230
msgid ""
"You must specify the name of the column that uniquely identifies the "
"individuals via the {.emph target_columns} argument."
msgstr ""

#: clean_data.R:231
msgid ""
"Type {.code ?check_subject_ids} to see the help on the corresponding "
"function."
msgstr ""

#: clean_data.R:252
msgid ""
"Converting the following {cli::qty(length(target_columns))} column{?s} into "
"numeric: {.field {toString(target_columns)}}"
msgstr ""

#: clean_data.R:268
msgid "Performing dictionary-based cleaning"
msgstr ""

#: clean_data.R:280
msgid "Checking whether date sequences are respected"
msgstr ""

#: clean_data_helpers.R:84
msgid "No character column found from the input data."
msgstr ""

#: clean_data_helpers.R:116
msgid ""
"Found {.cls numeric} values that can also be of type {.cls Date} in the "
"following {cli::qty(length(ambiguous_cols))} column{?s}: {.field "
"{toString(ambiguous_cols)}}."
msgstr ""

#: clean_data_helpers.R:117
msgid ""
"They can be converted into {.cls Date} using: {.code lubridate::as_date(x, "
"origin = as.Date(\"1900-01-01\"))}"
msgstr ""

#: clean_data_helpers.R:118
msgid ""
"where {.val x} represents here the vector of values from the corresponding "
"column ({.code data$target_column})."
msgstr ""

#: column_name_standardization.R:65
msgid ""
"Cannot rename {cli::qty(length(incorrect_col_names))} {?an/ } unrecognised "
"column name{?s} specified in {.emph rename} argument: {.val "
"{toString(incorrect_col_names)}}."
msgstr ""

#: column_name_standardization.R:66
msgid "Make sure that the columns to be renamed are part of the input data."
msgstr ""

#: column_name_standardization.R:67
msgid ""
"To rename columns, use: {.emph rename = c(new_name1 = 'old_name1', new_name2 "
"= 'old_name2')}."
msgstr ""

#: column_name_standardization.R:75
msgid ""
"The provided replace column {cli::qty(length(existing_cols))} name{?s} "
"already exist."
msgstr ""

#: column_name_standardization.R:76
msgid "All new names must be different from existing column names."
msgstr ""

#: column_name_standardization.R:77
msgid ""
"You must use {cli::qty(length(existing_cols))} {?a/ } different name{?s} for "
"the following column{?s}: {.field {toString(existing_cols)}}."
msgstr ""

#: convert_to_numeric.R:48
msgid "Automatic detection of columns to convert into numeric failed."
msgstr ""

#: convert_to_numeric.R:49
msgid "No character column with numeric values found by {.fn scan_data}."
msgstr ""

#: convert_to_numeric.R:50 convert_to_numeric.R:72
msgid ""
"Please specify names of the columns to convert into numeric using {.emph "
"target_columns}."
msgstr ""

#: convert_to_numeric.R:70
msgid ""
"Found one or more columns with insuffisient numeric values for automatic "
"conversion."
msgstr ""

#: convert_to_numeric.R:71
msgid ""
"The percentage of character values must be less than twice the numeric "
"values for a column to be considered for automatic conversion."
msgstr ""

#: convert_to_numeric.R:113
msgid "Found {.val {num_values}} numeric value{?s} in {.field {col}}."
msgstr ""

#: convert_to_numeric.R:114
msgid "Please consider the following options:"
msgstr ""

#: convert_to_numeric.R:115
msgid "Converting characters into numeric"
msgstr ""

#: convert_to_numeric.R:116
msgid ""
"Replacing the numeric values by {.val NA} using the {.fn "
"replace_missing_values} function."
msgstr ""

#: convert_to_numeric.R:123
msgid ""
"The following column{?s} will be converted into numeric: {.field "
"{to_numeric}}."
msgstr ""

#: correct_misspelled_values.R:145
msgid ""
"{.field {col}} is not a {.emph character} column so cannot be spell checked."
msgstr ""

#: date_standardization_helpers.R:48
msgid "Unexpected format in the function arguments."
msgstr ""

#: date_standardization_helpers.R:49
msgid ""
"{.emph first_date} and {.emph last_date} must be of type {.cls Date} or {."
"cls character} written in {.emph ISO8601} format ('2024-12-31' for December "
"31, 2024)."
msgstr ""

#: date_standardization_helpers.R:161
msgid "{.field {cols}} cannot be converted into {.cls Date} due to:"
msgstr ""

#: date_standardization_helpers.R:162
msgid "insuffisient {.cls Date} values"
msgstr ""

#: date_standardization_helpers.R:163
msgid "or a high number of values that are outside the specified time frame."
msgstr ""

#: date_standardization_helpers.R:435
msgid "Expected values with the same format."
msgstr ""

#: date_standardization_helpers.R:436
msgid "You've tried to convert values in different formats into {.cls Date}."
msgstr ""

#: date_standardization_helpers.R:437
msgid ""
"Please specify the formats encountered in your column of interest via the {."
"emph format} argument."
msgstr ""

#: date_standardization_helpers.R:578
msgid "Unexpected data type provided to {.fn date_guess} function."
msgstr ""

#: date_standardization_helpers.R:579
msgid ""
"You can convert the values into {.cls character} to enable format guessing."
msgstr ""

#: date_standardization_helpers.R:580
msgid ""
"You've tried to guess the date format from values of type other than Date "
"and character."
msgstr ""

#: date_standardization_helpers.R:600
msgid "Unable to match formats to target columns."
msgstr ""

#: date_standardization_helpers.R:601
msgid ""
"The number of target columns does not match the number of specified formats."
msgstr ""

#: date_standardization_helpers.R:602
msgid ""
"Only one format is needed if all target columns contain values of the same "
"format. Otherwise, one format per target column must be provided."
msgstr ""

#: date_standardization_helpers.R:607
msgid ""
"The target {cli::qty(length(target_columns))} column{?s} will be "
"standardized using the format: {.val {format}}."
msgstr ""

#: default_cleanepi_settings.R:48
msgid ""
"Found the following unrecognised {cli::qty(length(extra))} argument{?s} to {."
"fn clean_data}: {.emph {toString(extra)}}."
msgstr ""

#: default_cleanepi_settings.R:49
msgid "{.fn clean_data} does not support arguments other than the defaults."
msgstr ""

#: default_cleanepi_settings.R:50
msgid "You provided {cli::qty(length(extra))} {?an/ } unexpected argument{?s}."
msgstr ""

#: default_cleanepi_settings.R:51
msgid "Run {.fn get_default_params} to display the list of default parameters."
msgstr ""

#: dictionary_based_cleaning.R:52
msgid "Incorrect data dictionary format."
msgstr ""

#: dictionary_based_cleaning.R:53
msgid ""
"The value for the {.emph dictionary} argument must be a {.cls data.frame} "
"with the following columns: {.field {toString(all_columns)}}."
msgstr ""

#: dictionary_based_cleaning.R:54
msgid ""
"The following columns are mandatory: {.field {toString(mandatory_columns)}}."
msgstr ""

#: dictionary_based_cleaning.R:62
msgid ""
"Incorrect column names specified in column {.field grp} of the data "
"dictionary."
msgstr ""

#: dictionary_based_cleaning.R:63
msgid ""
"Values in {.field grp} column of the data dictionary must be found in the "
"input data frame."
msgstr ""

#: dictionary_based_cleaning.R:64
msgid "Did you enter an incorrect column name?"
msgstr ""

#: dictionary_based_cleaning.R:75
msgid "You can either:"
msgstr ""

#: dictionary_based_cleaning.R:76
msgid ""
"correct the misspelled {cli::qty(length(misspelled_options))} option{?s} "
"from the input data, or"
msgstr ""

#: dictionary_based_cleaning.R:77
msgid ""
"add {cli::qty(length(misspelled_options))} {?it/them} to the dictionary "
"using the {.fn add_to_dictionary} function."
msgstr ""

#: dictionary_based_cleaning.R:258
msgid ""
"Cannot replace {.val {toString(undefined_opts)}} present in column {.field "
"{option}} but not defined in the dictionary."
msgstr ""

#: find_and_remove_duplicates.R:138
msgid "Found {.val {nrow(dups)}} duplicated row{?s} in the dataset."
msgstr ""

#: find_and_remove_duplicates.R:139
msgid ""
"Use {.code print_report(dat, \"found_duplicates\")} to access them, where {."
"val dat} is the object used to store the output from this operation."
msgstr ""

#: find_and_remove_duplicates.R:154
msgid "No duplicates were found."
msgstr ""

#: guess_dates.R:86
msgid "Incorrect value provided to the {.emph order} argument."
msgstr ""

#: guess_dates.R:87
msgid ""
"Value for {.emph order} argument must be either a {.cls character} or a {."
"cls list} of character vectors."
msgstr ""

#: print_report.R:118
msgid "The {.pkg reactable} package is required for printing the report."
msgstr ""

#: print_report.R:127
msgid "No report associated with the input data."
msgstr ""

#: print_report.R:128
msgid ""
"At least one data cleaning operation must be applied to the data before "
"calling {.fn print_report}."
msgstr ""

#: print_report.R:129
msgid ""
"The list of functions in {.pkg cleanepi} can be found at: {.url https://"
"epiverse-trace.github.io/cleanepi/reference/index.html}."
msgstr ""

#: print_report.R:134
msgid "Incorrect value provided for {.emph format} argument!"
msgstr ""

#: print_report.R:135
msgid "Only {.val html} format is currently supported."
msgstr ""

#: print_report.R:167
msgid "Generating html report in {.file {temp_dir}}."
msgstr ""

#: remove_constants.R:67
msgid ""
"Constant data was not removed. The value for the {.emph cut-off} argument "
"must be greater than {.emph 0} and less than or equal to {.emph 1}."
msgstr ""

#: remove_constants.R:131
msgid ""
"Constant data was removed after {.val {nrow(constant_data_report)}} "
"iteration{?s}."
msgstr ""

#: remove_constants.R:132
msgid ""
"Enter {.code print_report(dat, \"constant_data\")} for more information, "
"where {.val dat} represents the object used to store the output from {.fn "
"remove_constants}."
msgstr ""

#: replace_missing_values.R:61
msgid ""
"Could not detect the provided missing value {cli::qty(length(na_strings))} "
"character{?s}."
msgstr ""

#: replace_missing_values.R:62
msgid ""
"Does your data contain missing value characters other than the specified "
"ones?"
msgstr ""

#: span.R:88
msgid "Unexpected type in the value for argument {.emph end_date}."
msgstr ""

#: span.R:89
msgid ""
"You provided a name of a column of type {.cls {class(data[[end_date]])}}."
msgstr ""

#: span.R:90
msgid ""
"The value for {.emph end_date} argument must be of type {.cls Date} in {."
"emph ISO8601} format."
msgstr ""

#: standardize_date.R:205
msgid ""
"Detected {.val {cli::no(num_multi_format_dates)}} value{?s} that {cli::"
"qty(num_multi_format_dates)} compl{?ies/y} with multiple formats and {.val "
"{cli::no(num_outsiders)}} value{?s} that {cli::qty(num_outsiders)} {?is/are} "
"outside of the specified time frame."
msgstr ""

#: standardize_date.R:206
msgid ""
"Enter {.code print_report(data = dat, \"date_standardization\")} to access "
"{cli::qty(num_multi_format_dates)} {?it/them}, where {.val dat} is the "
"object used to store the output from this operation."
msgstr ""

#: standardize_date.R:212
msgid ""
"Found {.cls numeric} values that could also be of type {.cls Date} in {cli::"
"qty(length(ambiguous_cols))} column{?s}: {.field {toString(ambiguous_cols)}}."
msgstr ""

#: standardize_date.R:213
msgid ""
"It is possible to convert them into {.cls Date} using: {.code lubridate::"
"as_date(x, origin = as.Date(\"1900-01-01\"))}"
msgstr ""

#: standardize_date.R:214
msgid ""
"where {.val x} represents here the vector of values from these columns ({."
"code data$target_column})."
msgstr ""

#: standardize_subject_ids.R:120
msgid "No incorrect subject id was detected."
msgstr ""

#: standardize_subject_ids.R:162
msgid ""
"Detected {.val {cli::no({num_missing_ids})}} missing, {.val {cli::"
"no({num_duplicated_ids})}} duplicated, and {.val {cli::"
"no({nrow(report$invalid_subject_ids) - num_missing_ids})}} incorrect subject "
"IDs."
msgstr ""

#: standardize_subject_ids.R:163
msgid ""
"Enter {.code print_report(data = dat, \"incorrect_subject_id\")} to access "
"them, where {.val dat} is the object used to store the output from this "
"operation."
msgstr ""

#: standardize_subject_ids.R:164
msgid ""
"You can use the {.fn correct_subject_ids} function to correct {cli::"
"qty(length(bad_rows))} {?it/them}."
msgstr ""

#: standardize_subject_ids.R:266
msgid ""
"Some IDs specified in the correction table were not found in the input data."
msgstr ""

#: standardize_subject_ids.R:267
msgid ""
"Values in the {.field from} column of the correction table must be part of "
"the detected incorrect subject IDs."
msgstr ""

#: utils.R:107
msgid "`value` to add to `report` attribute cannot be NULL."
msgstr ""

#: utils.R:108
msgid ""
"Please specify an object to {.emph value} to be added to {.emph report}."
msgstr ""

#: utils.R:137
msgid ""
"Could not find the following column name{?s}: {.field {target_columns[is."
"na(idx)]}}"
msgstr ""

#: utils.R:138
msgid ""
"Please make sure that all specified target columns belong to the input data."
msgstr ""

#: utils.R:149
msgid "Some column indices are out of bound."
msgstr ""

#: utils.R:150
msgid "Column indices must be between {.val {1}} and {.val {ncol(data)}}."
msgstr ""

#: utils.R:151
msgid "You provided indices for columns that do not exist."
msgstr ""

#: utils.R:161
msgid "Invalid value for {.emph target_columns}."
msgstr ""

#: utils.R:162
msgid ""
"{.val linelist_tags} only works on {.cls linelist} objects. You can provide "
"a {.cls vector} of column names for inputs of class {.cls data.frame}."
msgstr ""

#: utils.R:176
msgid "The specified target columns are either constant or empty."
msgstr ""

#: utils.R:177
msgid "Please consider using:"
msgstr ""

#: utils.R:178
msgid "the names of columns that are neither constant or empty, or"
msgstr ""

#: utils.R:179
msgid "{.fn remove_constants} prior to this cleaning operation."
msgstr ""
